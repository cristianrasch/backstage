#pools-show
  %h2 
    == Runtime Pool: #{@object.name}
  .actions

  %table.data-table
    - %w{ name app_name pool_type size }.each do |method|
      = data_row( method.humanize, @object.send( method ) )

    - unless @object.shared?
      - %w{ available borrowed minimum_instances maximum_instances }.each do |method|
        = data_row( method.humanize, @object.send( method ) )
     
  #evaluate
    %h3 Evaluate Ruby Against This Pool
    #results

    :javascript
      function evaluate_remote() {
        $.post(
          '#{url( object_action_path( @object, :evaluate ) )}', 
          $('#script_form').serialize(),
          function( response ) {
            result = response.result
            klass = 'result'
            if (response.exception) {
              klass += ' exception'
              result = response.exception + "\n    " + response.backtrace.join( "\n    " )
            } else {
              result = '' + response.result
            }
            $( '#results' ).append( $( '<pre/>' ).addClass( klass ).text( result ) )
          }
        )
      }

    %form#script_form
      %textarea{:name => 'script'}
        = @script
      %input{:type => 'button', :value => 'Evaluate', :onclick => "javascript:evaluate_remote()"}

  .controls
    = link_to collection_path( :pools ), '<< Back'

